// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: swaprpc/swaprpc.proto

package swaprpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetRatesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetRatesRequest) Reset() {
	*x = GetRatesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_swaprpc_swaprpc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRatesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRatesRequest) ProtoMessage() {}

func (x *GetRatesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_swaprpc_swaprpc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRatesRequest.ProtoReflect.Descriptor instead.
func (*GetRatesRequest) Descriptor() ([]byte, []int) {
	return file_swaprpc_swaprpc_proto_rawDescGZIP(), []int{0}
}

type GetRatesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssetInfos []*AssetInfo `protobuf:"bytes,1,rep,name=asset_infos,json=assetInfos,proto3" json:"asset_infos,omitempty"`
	Fee        float32      `protobuf:"fixed32,2,opt,name=fee,proto3" json:"fee,omitempty"`
}

func (x *GetRatesResponse) Reset() {
	*x = GetRatesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_swaprpc_swaprpc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRatesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRatesResponse) ProtoMessage() {}

func (x *GetRatesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_swaprpc_swaprpc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRatesResponse.ProtoReflect.Descriptor instead.
func (*GetRatesResponse) Descriptor() ([]byte, []int) {
	return file_swaprpc_swaprpc_proto_rawDescGZIP(), []int{1}
}

func (x *GetRatesResponse) GetAssetInfos() []*AssetInfo {
	if x != nil {
		return x.AssetInfos
	}
	return nil
}

func (x *GetRatesResponse) GetFee() float32 {
	if x != nil {
		return x.Fee
	}
	return 0
}

type AssetInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ExchangeRate  float32 `protobuf:"fixed32,2,opt,name=exchange_rate,json=exchangeRate,proto3" json:"exchange_rate,omitempty"`
	PremiumPerSat float32 `protobuf:"fixed32,3,opt,name=premium_per_sat,json=premiumPerSat,proto3" json:"premium_per_sat,omitempty"`
}

func (x *AssetInfo) Reset() {
	*x = AssetInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_swaprpc_swaprpc_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetInfo) ProtoMessage() {}

func (x *AssetInfo) ProtoReflect() protoreflect.Message {
	mi := &file_swaprpc_swaprpc_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetInfo.ProtoReflect.Descriptor instead.
func (*AssetInfo) Descriptor() ([]byte, []int) {
	return file_swaprpc_swaprpc_proto_rawDescGZIP(), []int{2}
}

func (x *AssetInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AssetInfo) GetExchangeRate() float32 {
	if x != nil {
		return x.ExchangeRate
	}
	return 0
}

func (x *AssetInfo) GetPremiumPerSat() float32 {
	if x != nil {
		return x.PremiumPerSat
	}
	return 0
}

type ServerTerms struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FeePerSat        float32 `protobuf:"fixed32,1,opt,name=fee_per_sat,json=feePerSat,proto3" json:"fee_per_sat,omitempty"`
	FlatBaseFee      uint32  `protobuf:"varint,2,opt,name=flat_base_fee,json=flatBaseFee,proto3" json:"flat_base_fee,omitempty"`
	PayConfsRequired uint32  `protobuf:"varint,3,opt,name=pay_confs_required,json=payConfsRequired,proto3" json:"pay_confs_required,omitempty"`
}

func (x *ServerTerms) Reset() {
	*x = ServerTerms{}
	if protoimpl.UnsafeEnabled {
		mi := &file_swaprpc_swaprpc_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerTerms) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerTerms) ProtoMessage() {}

func (x *ServerTerms) ProtoReflect() protoreflect.Message {
	mi := &file_swaprpc_swaprpc_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerTerms.ProtoReflect.Descriptor instead.
func (*ServerTerms) Descriptor() ([]byte, []int) {
	return file_swaprpc_swaprpc_proto_rawDescGZIP(), []int{3}
}

func (x *ServerTerms) GetFeePerSat() float32 {
	if x != nil {
		return x.FeePerSat
	}
	return 0
}

func (x *ServerTerms) GetFlatBaseFee() uint32 {
	if x != nil {
		return x.FlatBaseFee
	}
	return 0
}

func (x *ServerTerms) GetPayConfsRequired() uint32 {
	if x != nil {
		return x.PayConfsRequired
	}
	return 0
}

type ReceivePaymentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentId string `protobuf:"bytes,1,opt,name=payment_id,json=paymentId,proto3" json:"payment_id,omitempty"`
	// Types that are assignable to Message:
	//	*ReceivePaymentRequest_StartReceive
	//	*ReceivePaymentRequest_PreimageMessage
	//	*ReceivePaymentRequest_Cancel
	Message isReceivePaymentRequest_Message `protobuf_oneof:"message"`
}

func (x *ReceivePaymentRequest) Reset() {
	*x = ReceivePaymentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_swaprpc_swaprpc_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReceivePaymentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceivePaymentRequest) ProtoMessage() {}

func (x *ReceivePaymentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_swaprpc_swaprpc_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceivePaymentRequest.ProtoReflect.Descriptor instead.
func (*ReceivePaymentRequest) Descriptor() ([]byte, []int) {
	return file_swaprpc_swaprpc_proto_rawDescGZIP(), []int{4}
}

func (x *ReceivePaymentRequest) GetPaymentId() string {
	if x != nil {
		return x.PaymentId
	}
	return ""
}

func (m *ReceivePaymentRequest) GetMessage() isReceivePaymentRequest_Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (x *ReceivePaymentRequest) GetStartReceive() *StartReceiveMessage {
	if x, ok := x.GetMessage().(*ReceivePaymentRequest_StartReceive); ok {
		return x.StartReceive
	}
	return nil
}

func (x *ReceivePaymentRequest) GetPreimageMessage() *PreimageMessage {
	if x, ok := x.GetMessage().(*ReceivePaymentRequest_PreimageMessage); ok {
		return x.PreimageMessage
	}
	return nil
}

func (x *ReceivePaymentRequest) GetCancel() *CancelMessage {
	if x, ok := x.GetMessage().(*ReceivePaymentRequest_Cancel); ok {
		return x.Cancel
	}
	return nil
}

type isReceivePaymentRequest_Message interface {
	isReceivePaymentRequest_Message()
}

type ReceivePaymentRequest_StartReceive struct {
	StartReceive *StartReceiveMessage `protobuf:"bytes,2,opt,name=start_receive,json=startReceive,proto3,oneof"`
}

type ReceivePaymentRequest_PreimageMessage struct {
	PreimageMessage *PreimageMessage `protobuf:"bytes,3,opt,name=preimage_message,json=preimageMessage,proto3,oneof"`
}

type ReceivePaymentRequest_Cancel struct {
	Cancel *CancelMessage `protobuf:"bytes,4,opt,name=cancel,proto3,oneof"`
}

func (*ReceivePaymentRequest_StartReceive) isReceivePaymentRequest_Message() {}

func (*ReceivePaymentRequest_PreimageMessage) isReceivePaymentRequest_Message() {}

func (*ReceivePaymentRequest_Cancel) isReceivePaymentRequest_Message() {}

type ReceivePaymentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentId string `protobuf:"bytes,1,opt,name=payment_id,json=paymentId,proto3" json:"payment_id,omitempty"`
	// Types that are assignable to Message:
	//	*ReceivePaymentResponse_WaitForPayment
	//	*ReceivePaymentResponse_TxOpened
	Message isReceivePaymentResponse_Message `protobuf_oneof:"message"`
}

func (x *ReceivePaymentResponse) Reset() {
	*x = ReceivePaymentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_swaprpc_swaprpc_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReceivePaymentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceivePaymentResponse) ProtoMessage() {}

func (x *ReceivePaymentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_swaprpc_swaprpc_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceivePaymentResponse.ProtoReflect.Descriptor instead.
func (*ReceivePaymentResponse) Descriptor() ([]byte, []int) {
	return file_swaprpc_swaprpc_proto_rawDescGZIP(), []int{5}
}

func (x *ReceivePaymentResponse) GetPaymentId() string {
	if x != nil {
		return x.PaymentId
	}
	return ""
}

func (m *ReceivePaymentResponse) GetMessage() isReceivePaymentResponse_Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (x *ReceivePaymentResponse) GetWaitForPayment() *WaitForPaymentMessage {
	if x, ok := x.GetMessage().(*ReceivePaymentResponse_WaitForPayment); ok {
		return x.WaitForPayment
	}
	return nil
}

func (x *ReceivePaymentResponse) GetTxOpened() *TxOpenedMessage {
	if x, ok := x.GetMessage().(*ReceivePaymentResponse_TxOpened); ok {
		return x.TxOpened
	}
	return nil
}

type isReceivePaymentResponse_Message interface {
	isReceivePaymentResponse_Message()
}

type ReceivePaymentResponse_WaitForPayment struct {
	WaitForPayment *WaitForPaymentMessage `protobuf:"bytes,2,opt,name=wait_for_payment,json=waitForPayment,proto3,oneof"`
}

type ReceivePaymentResponse_TxOpened struct {
	TxOpened *TxOpenedMessage `protobuf:"bytes,3,opt,name=tx_opened,json=txOpened,proto3,oneof"`
}

func (*ReceivePaymentResponse_WaitForPayment) isReceivePaymentResponse_Message() {}

func (*ReceivePaymentResponse_TxOpened) isReceivePaymentResponse_Message() {}

type StartReceiveMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentHash []byte `protobuf:"bytes,1,opt,name=payment_hash,json=paymentHash,proto3" json:"payment_hash,omitempty"`
	TakerPubkey []byte `protobuf:"bytes,2,opt,name=taker_pubkey,json=takerPubkey,proto3" json:"taker_pubkey,omitempty"`
	Amount      uint64 `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"`
	Asset       string `protobuf:"bytes,4,opt,name=asset,proto3" json:"asset,omitempty"`
	Address     string `protobuf:"bytes,5,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *StartReceiveMessage) Reset() {
	*x = StartReceiveMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_swaprpc_swaprpc_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartReceiveMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartReceiveMessage) ProtoMessage() {}

func (x *StartReceiveMessage) ProtoReflect() protoreflect.Message {
	mi := &file_swaprpc_swaprpc_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartReceiveMessage.ProtoReflect.Descriptor instead.
func (*StartReceiveMessage) Descriptor() ([]byte, []int) {
	return file_swaprpc_swaprpc_proto_rawDescGZIP(), []int{6}
}

func (x *StartReceiveMessage) GetPaymentHash() []byte {
	if x != nil {
		return x.PaymentHash
	}
	return nil
}

func (x *StartReceiveMessage) GetTakerPubkey() []byte {
	if x != nil {
		return x.TakerPubkey
	}
	return nil
}

func (x *StartReceiveMessage) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *StartReceiveMessage) GetAsset() string {
	if x != nil {
		return x.Asset
	}
	return ""
}

func (x *StartReceiveMessage) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type TxOpenedMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxId        string `protobuf:"bytes,1,opt,name=tx_id,json=txId,proto3" json:"tx_id,omitempty"`
	TxHex       string `protobuf:"bytes,2,opt,name=tx_hex,json=txHex,proto3" json:"tx_hex,omitempty"`
	ScriptVout  uint32 `protobuf:"varint,3,opt,name=script_vout,json=scriptVout,proto3" json:"script_vout,omitempty"`
	MakerPubkey []byte `protobuf:"bytes,4,opt,name=maker_pubkey,json=makerPubkey,proto3" json:"maker_pubkey,omitempty"`
	Csv         uint32 `protobuf:"varint,5,opt,name=csv,proto3" json:"csv,omitempty"`
}

func (x *TxOpenedMessage) Reset() {
	*x = TxOpenedMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_swaprpc_swaprpc_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TxOpenedMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxOpenedMessage) ProtoMessage() {}

func (x *TxOpenedMessage) ProtoReflect() protoreflect.Message {
	mi := &file_swaprpc_swaprpc_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxOpenedMessage.ProtoReflect.Descriptor instead.
func (*TxOpenedMessage) Descriptor() ([]byte, []int) {
	return file_swaprpc_swaprpc_proto_rawDescGZIP(), []int{7}
}

func (x *TxOpenedMessage) GetTxId() string {
	if x != nil {
		return x.TxId
	}
	return ""
}

func (x *TxOpenedMessage) GetTxHex() string {
	if x != nil {
		return x.TxHex
	}
	return ""
}

func (x *TxOpenedMessage) GetScriptVout() uint32 {
	if x != nil {
		return x.ScriptVout
	}
	return 0
}

func (x *TxOpenedMessage) GetMakerPubkey() []byte {
	if x != nil {
		return x.MakerPubkey
	}
	return nil
}

func (x *TxOpenedMessage) GetCsv() uint32 {
	if x != nil {
		return x.Csv
	}
	return 0
}

type CancelMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reason string `protobuf:"bytes,1,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *CancelMessage) Reset() {
	*x = CancelMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_swaprpc_swaprpc_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelMessage) ProtoMessage() {}

func (x *CancelMessage) ProtoReflect() protoreflect.Message {
	mi := &file_swaprpc_swaprpc_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelMessage.ProtoReflect.Descriptor instead.
func (*CancelMessage) Descriptor() ([]byte, []int) {
	return file_swaprpc_swaprpc_proto_rawDescGZIP(), []int{8}
}

func (x *CancelMessage) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type WaitForPaymentMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Invoice string `protobuf:"bytes,1,opt,name=invoice,proto3" json:"invoice,omitempty"`
	SwapId  string `protobuf:"bytes,2,opt,name=swap_id,json=swapId,proto3" json:"swap_id,omitempty"`
}

func (x *WaitForPaymentMessage) Reset() {
	*x = WaitForPaymentMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_swaprpc_swaprpc_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WaitForPaymentMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WaitForPaymentMessage) ProtoMessage() {}

func (x *WaitForPaymentMessage) ProtoReflect() protoreflect.Message {
	mi := &file_swaprpc_swaprpc_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WaitForPaymentMessage.ProtoReflect.Descriptor instead.
func (*WaitForPaymentMessage) Descriptor() ([]byte, []int) {
	return file_swaprpc_swaprpc_proto_rawDescGZIP(), []int{9}
}

func (x *WaitForPaymentMessage) GetInvoice() string {
	if x != nil {
		return x.Invoice
	}
	return ""
}

func (x *WaitForPaymentMessage) GetSwapId() string {
	if x != nil {
		return x.SwapId
	}
	return ""
}

type PreimageMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Preimage []byte `protobuf:"bytes,1,opt,name=preimage,proto3" json:"preimage,omitempty"`
}

func (x *PreimageMessage) Reset() {
	*x = PreimageMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_swaprpc_swaprpc_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PreimageMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreimageMessage) ProtoMessage() {}

func (x *PreimageMessage) ProtoReflect() protoreflect.Message {
	mi := &file_swaprpc_swaprpc_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreimageMessage.ProtoReflect.Descriptor instead.
func (*PreimageMessage) Descriptor() ([]byte, []int) {
	return file_swaprpc_swaprpc_proto_rawDescGZIP(), []int{10}
}

func (x *PreimageMessage) GetPreimage() []byte {
	if x != nil {
		return x.Preimage
	}
	return nil
}

type SendPaymentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentId string `protobuf:"bytes,1,opt,name=payment_id,json=paymentId,proto3" json:"payment_id,omitempty"`
	// Types that are assignable to Message:
	//	*SendPaymentRequest_PaymentRequest
	//	*SendPaymentRequest_Tx
	//	*SendPaymentRequest_Cancel
	Message isSendPaymentRequest_Message `protobuf_oneof:"message"`
}

func (x *SendPaymentRequest) Reset() {
	*x = SendPaymentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_swaprpc_swaprpc_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendPaymentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendPaymentRequest) ProtoMessage() {}

func (x *SendPaymentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_swaprpc_swaprpc_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendPaymentRequest.ProtoReflect.Descriptor instead.
func (*SendPaymentRequest) Descriptor() ([]byte, []int) {
	return file_swaprpc_swaprpc_proto_rawDescGZIP(), []int{11}
}

func (x *SendPaymentRequest) GetPaymentId() string {
	if x != nil {
		return x.PaymentId
	}
	return ""
}

func (m *SendPaymentRequest) GetMessage() isSendPaymentRequest_Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (x *SendPaymentRequest) GetPaymentRequest() *PaymentRequestmessage {
	if x, ok := x.GetMessage().(*SendPaymentRequest_PaymentRequest); ok {
		return x.PaymentRequest
	}
	return nil
}

func (x *SendPaymentRequest) GetTx() *TxMessage {
	if x, ok := x.GetMessage().(*SendPaymentRequest_Tx); ok {
		return x.Tx
	}
	return nil
}

func (x *SendPaymentRequest) GetCancel() *CancelMessage {
	if x, ok := x.GetMessage().(*SendPaymentRequest_Cancel); ok {
		return x.Cancel
	}
	return nil
}

type isSendPaymentRequest_Message interface {
	isSendPaymentRequest_Message()
}

type SendPaymentRequest_PaymentRequest struct {
	PaymentRequest *PaymentRequestmessage `protobuf:"bytes,2,opt,name=payment_request,json=paymentRequest,proto3,oneof"`
}

type SendPaymentRequest_Tx struct {
	Tx *TxMessage `protobuf:"bytes,3,opt,name=tx,proto3,oneof"`
}

type SendPaymentRequest_Cancel struct {
	Cancel *CancelMessage `protobuf:"bytes,4,opt,name=cancel,proto3,oneof"`
}

func (*SendPaymentRequest_PaymentRequest) isSendPaymentRequest_Message() {}

func (*SendPaymentRequest_Tx) isSendPaymentRequest_Message() {}

func (*SendPaymentRequest_Cancel) isSendPaymentRequest_Message() {}

type SendPaymentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentId string `protobuf:"bytes,1,opt,name=payment_id,json=paymentId,proto3" json:"payment_id,omitempty"`
	// Types that are assignable to Message:
	//	*SendPaymentResponse_PayAgreement
	//	*SendPaymentResponse_PayCompleted
	Message isSendPaymentResponse_Message `protobuf_oneof:"message"`
}

func (x *SendPaymentResponse) Reset() {
	*x = SendPaymentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_swaprpc_swaprpc_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendPaymentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendPaymentResponse) ProtoMessage() {}

func (x *SendPaymentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_swaprpc_swaprpc_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendPaymentResponse.ProtoReflect.Descriptor instead.
func (*SendPaymentResponse) Descriptor() ([]byte, []int) {
	return file_swaprpc_swaprpc_proto_rawDescGZIP(), []int{12}
}

func (x *SendPaymentResponse) GetPaymentId() string {
	if x != nil {
		return x.PaymentId
	}
	return ""
}

func (m *SendPaymentResponse) GetMessage() isSendPaymentResponse_Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (x *SendPaymentResponse) GetPayAgreement() *PayAgreementMessage {
	if x, ok := x.GetMessage().(*SendPaymentResponse_PayAgreement); ok {
		return x.PayAgreement
	}
	return nil
}

func (x *SendPaymentResponse) GetPayCompleted() *PayCompletedMessage {
	if x, ok := x.GetMessage().(*SendPaymentResponse_PayCompleted); ok {
		return x.PayCompleted
	}
	return nil
}

type isSendPaymentResponse_Message interface {
	isSendPaymentResponse_Message()
}

type SendPaymentResponse_PayAgreement struct {
	PayAgreement *PayAgreementMessage `protobuf:"bytes,2,opt,name=pay_agreement,json=payAgreement,proto3,oneof"`
}

type SendPaymentResponse_PayCompleted struct {
	PayCompleted *PayCompletedMessage `protobuf:"bytes,3,opt,name=pay_completed,json=payCompleted,proto3,oneof"`
}

func (*SendPaymentResponse_PayAgreement) isSendPaymentResponse_Message() {}

func (*SendPaymentResponse_PayCompleted) isSendPaymentResponse_Message() {}

type PaymentRequestmessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentHash []byte `protobuf:"bytes,1,opt,name=payment_hash,json=paymentHash,proto3" json:"payment_hash,omitempty"`
	MakerPubkey []byte `protobuf:"bytes,2,opt,name=maker_pubkey,json=makerPubkey,proto3" json:"maker_pubkey,omitempty"`
	Invoice     string `protobuf:"bytes,3,opt,name=invoice,proto3" json:"invoice,omitempty"`
	Asset       string `protobuf:"bytes,4,opt,name=asset,proto3" json:"asset,omitempty"`
}

func (x *PaymentRequestmessage) Reset() {
	*x = PaymentRequestmessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_swaprpc_swaprpc_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentRequestmessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentRequestmessage) ProtoMessage() {}

func (x *PaymentRequestmessage) ProtoReflect() protoreflect.Message {
	mi := &file_swaprpc_swaprpc_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentRequestmessage.ProtoReflect.Descriptor instead.
func (*PaymentRequestmessage) Descriptor() ([]byte, []int) {
	return file_swaprpc_swaprpc_proto_rawDescGZIP(), []int{13}
}

func (x *PaymentRequestmessage) GetPaymentHash() []byte {
	if x != nil {
		return x.PaymentHash
	}
	return nil
}

func (x *PaymentRequestmessage) GetMakerPubkey() []byte {
	if x != nil {
		return x.MakerPubkey
	}
	return nil
}

func (x *PaymentRequestmessage) GetInvoice() string {
	if x != nil {
		return x.Invoice
	}
	return ""
}

func (x *PaymentRequestmessage) GetAsset() string {
	if x != nil {
		return x.Asset
	}
	return ""
}

type TxMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxId string `protobuf:"bytes,1,opt,name=tx_id,json=txId,proto3" json:"tx_id,omitempty"`
}

func (x *TxMessage) Reset() {
	*x = TxMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_swaprpc_swaprpc_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TxMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxMessage) ProtoMessage() {}

func (x *TxMessage) ProtoReflect() protoreflect.Message {
	mi := &file_swaprpc_swaprpc_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxMessage.ProtoReflect.Descriptor instead.
func (*TxMessage) Descriptor() ([]byte, []int) {
	return file_swaprpc_swaprpc_proto_rawDescGZIP(), []int{14}
}

func (x *TxMessage) GetTxId() string {
	if x != nil {
		return x.TxId
	}
	return ""
}

type PayAgreementMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TakerPubkey      string `protobuf:"bytes,1,opt,name=taker_pubkey,json=takerPubkey,proto3" json:"taker_pubkey,omitempty"`
	Csv              uint32 `protobuf:"varint,2,opt,name=csv,proto3" json:"csv,omitempty"`
	OnchainPayAmount uint64 `protobuf:"varint,3,opt,name=onchain_pay_amount,json=onchainPayAmount,proto3" json:"onchain_pay_amount,omitempty"`
}

func (x *PayAgreementMessage) Reset() {
	*x = PayAgreementMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_swaprpc_swaprpc_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayAgreementMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayAgreementMessage) ProtoMessage() {}

func (x *PayAgreementMessage) ProtoReflect() protoreflect.Message {
	mi := &file_swaprpc_swaprpc_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayAgreementMessage.ProtoReflect.Descriptor instead.
func (*PayAgreementMessage) Descriptor() ([]byte, []int) {
	return file_swaprpc_swaprpc_proto_rawDescGZIP(), []int{15}
}

func (x *PayAgreementMessage) GetTakerPubkey() string {
	if x != nil {
		return x.TakerPubkey
	}
	return ""
}

func (x *PayAgreementMessage) GetCsv() uint32 {
	if x != nil {
		return x.Csv
	}
	return 0
}

func (x *PayAgreementMessage) GetOnchainPayAmount() uint64 {
	if x != nil {
		return x.OnchainPayAmount
	}
	return 0
}

type PayCompletedMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Preimage     string `protobuf:"bytes,1,opt,name=preimage,proto3" json:"preimage,omitempty"`
	CancelReason string `protobuf:"bytes,2,opt,name=cancel_reason,json=cancelReason,proto3" json:"cancel_reason,omitempty"`
}

func (x *PayCompletedMessage) Reset() {
	*x = PayCompletedMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_swaprpc_swaprpc_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayCompletedMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayCompletedMessage) ProtoMessage() {}

func (x *PayCompletedMessage) ProtoReflect() protoreflect.Message {
	mi := &file_swaprpc_swaprpc_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayCompletedMessage.ProtoReflect.Descriptor instead.
func (*PayCompletedMessage) Descriptor() ([]byte, []int) {
	return file_swaprpc_swaprpc_proto_rawDescGZIP(), []int{16}
}

func (x *PayCompletedMessage) GetPreimage() string {
	if x != nil {
		return x.Preimage
	}
	return ""
}

func (x *PayCompletedMessage) GetCancelReason() string {
	if x != nil {
		return x.CancelReason
	}
	return ""
}

var File_swaprpc_swaprpc_proto protoreflect.FileDescriptor

var file_swaprpc_swaprpc_proto_rawDesc = []byte{
	0x0a, 0x15, 0x73, 0x77, 0x61, 0x70, 0x72, 0x70, 0x63, 0x2f, 0x73, 0x77, 0x61, 0x70, 0x72, 0x70,
	0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x73, 0x77, 0x61, 0x70, 0x77, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x22, 0x11, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x52, 0x61, 0x74, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x5c, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x52, 0x61, 0x74,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x0b, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x73, 0x77, 0x61, 0x70, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x41, 0x73, 0x73,
	0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x65, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x03, 0x66, 0x65, 0x65, 0x22, 0x6c, 0x0a, 0x09, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x65, 0x78,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x61, 0x74, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x70, 0x72,
	0x65, 0x6d, 0x69, 0x75, 0x6d, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x73, 0x61, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x0d, 0x70, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x50, 0x65, 0x72, 0x53,
	0x61, 0x74, 0x22, 0x7f, 0x0a, 0x0b, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x65, 0x72, 0x6d,
	0x73, 0x12, 0x1e, 0x0a, 0x0b, 0x66, 0x65, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x73, 0x61, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x66, 0x65, 0x65, 0x50, 0x65, 0x72, 0x53, 0x61,
	0x74, 0x12, 0x22, 0x0a, 0x0d, 0x66, 0x6c, 0x61, 0x74, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x66,
	0x65, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x66, 0x6c, 0x61, 0x74, 0x42, 0x61,
	0x73, 0x65, 0x46, 0x65, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x70, 0x61, 0x79, 0x5f, 0x63, 0x6f, 0x6e,
	0x66, 0x73, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x10, 0x70, 0x61, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x73, 0x52, 0x65, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x64, 0x22, 0x88, 0x02, 0x0a, 0x15, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x46, 0x0a, 0x0d,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x77, 0x61, 0x70, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0c, 0x73, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x12, 0x48, 0x0a, 0x10, 0x70, 0x72, 0x65, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x73, 0x77, 0x61, 0x70, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x50, 0x72, 0x65, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0f, 0x70,
	0x72, 0x65, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x33,
	0x0a, 0x06, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x73, 0x77, 0x61, 0x70, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x43, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x06, 0x63, 0x61, 0x6e,
	0x63, 0x65, 0x6c, 0x42, 0x09, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xcd,
	0x01, 0x0a, 0x16, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x4d, 0x0a, 0x10, 0x77, 0x61, 0x69, 0x74,
	0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x73, 0x77, 0x61, 0x70, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e,
	0x57, 0x61, 0x69, 0x74, 0x46, 0x6f, 0x72, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0e, 0x77, 0x61, 0x69, 0x74, 0x46, 0x6f, 0x72,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x3a, 0x0a, 0x09, 0x74, 0x78, 0x5f, 0x6f, 0x70,
	0x65, 0x6e, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x77, 0x61,
	0x70, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x54, 0x78, 0x4f, 0x70, 0x65, 0x6e, 0x65, 0x64,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x08, 0x74, 0x78, 0x4f, 0x70, 0x65,
	0x6e, 0x65, 0x64, 0x42, 0x09, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xa3,
	0x01, 0x0a, 0x13, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x61, 0x73, 0x68, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x61, 0x6b,
	0x65, 0x72, 0x5f, 0x70, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x0b, 0x74, 0x61, 0x6b, 0x65, 0x72, 0x50, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x22, 0x93, 0x01, 0x0a, 0x0f, 0x54, 0x78, 0x4f, 0x70, 0x65, 0x6e, 0x65,
	0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x13, 0x0a, 0x05, 0x74, 0x78, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x78, 0x49, 0x64, 0x12, 0x15, 0x0a,
	0x06, 0x74, 0x78, 0x5f, 0x68, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x78, 0x48, 0x65, 0x78, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x5f, 0x76,
	0x6f, 0x75, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x56, 0x6f, 0x75, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x5f, 0x70,
	0x75, 0x62, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x6d, 0x61, 0x6b,
	0x65, 0x72, 0x50, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x73, 0x76, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x63, 0x73, 0x76, 0x22, 0x27, 0x0a, 0x0d, 0x43, 0x61,
	0x6e, 0x63, 0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x22, 0x4a, 0x0a, 0x15, 0x57, 0x61, 0x69, 0x74, 0x46, 0x6f, 0x72, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69,
	0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x77, 0x61, 0x70, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x77, 0x61, 0x70, 0x49, 0x64, 0x22,
	0x2d, 0x0a, 0x0f, 0x50, 0x72, 0x65, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x65, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x70, 0x72, 0x65, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x22, 0xea,
	0x01, 0x0a, 0x12, 0x53, 0x65, 0x6e, 0x64, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x4c, 0x0a, 0x0f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x73, 0x77, 0x61, 0x70, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x48, 0x00, 0x52, 0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x27, 0x0a, 0x02, 0x74, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x73, 0x77, 0x61, 0x70, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x54, 0x78, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x02, 0x74, 0x78, 0x12, 0x33, 0x0a, 0x06, 0x63,
	0x61, 0x6e, 0x63, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x77,
	0x61, 0x70, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x06, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c,
	0x42, 0x09, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xcf, 0x01, 0x0a, 0x13,
	0x53, 0x65, 0x6e, 0x64, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x46, 0x0a, 0x0d, 0x70, 0x61, 0x79, 0x5f, 0x61, 0x67, 0x72, 0x65, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x77, 0x61, 0x70,
	0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x41, 0x67, 0x72, 0x65, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0c, 0x70, 0x61,
	0x79, 0x41, 0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x46, 0x0a, 0x0d, 0x70, 0x61,
	0x79, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x77, 0x61, 0x70, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x50,
	0x61, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x48, 0x00, 0x52, 0x0c, 0x70, 0x61, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x42, 0x09, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x8d, 0x01,
	0x0a, 0x15, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x61, 0x73, 0x68, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x61,
	0x6b, 0x65, 0x72, 0x5f, 0x70, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0b, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x50, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x12, 0x18, 0x0a,
	0x07, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x22, 0x20, 0x0a,
	0x09, 0x54, 0x78, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x13, 0x0a, 0x05, 0x74, 0x78,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x78, 0x49, 0x64, 0x22,
	0x78, 0x0a, 0x13, 0x50, 0x61, 0x79, 0x41, 0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x61, 0x6b, 0x65, 0x72, 0x5f,
	0x70, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x61,
	0x6b, 0x65, 0x72, 0x50, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x73, 0x76,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x63, 0x73, 0x76, 0x12, 0x2c, 0x0a, 0x12, 0x6f,
	0x6e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x70, 0x61, 0x79, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x6f, 0x6e, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x50, 0x61, 0x79, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x56, 0x0a, 0x13, 0x50, 0x61, 0x79,
	0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x65, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x65, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x23, 0x0a, 0x0d,
	0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x52, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x32, 0x85, 0x02, 0x0a, 0x0b, 0x53, 0x77, 0x61, 0x70, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x45, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x52, 0x61, 0x74, 0x65, 0x73, 0x12, 0x1b, 0x2e,
	0x73, 0x77, 0x61, 0x70, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x61,
	0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x73, 0x77, 0x61,
	0x70, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x61, 0x74, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x0b, 0x53, 0x65, 0x6e, 0x64,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1e, 0x2e, 0x73, 0x77, 0x61, 0x70, 0x77, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x73, 0x77, 0x61, 0x70, 0x77, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x28, 0x01, 0x30, 0x01, 0x12, 0x5b, 0x0a, 0x0e,
	0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x21,
	0x2e, 0x73, 0x77, 0x61, 0x70, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x52, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x22, 0x2e, 0x73, 0x77, 0x61, 0x70, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x52,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x28, 0x01, 0x30, 0x01, 0x42, 0x28, 0x5a, 0x26, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x70, 0x75, 0x74, 0x6e, 0x31, 0x63, 0x6b,
	0x2f, 0x73, 0x77, 0x61, 0x70, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2f, 0x73, 0x77, 0x61, 0x70,
	0x72, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_swaprpc_swaprpc_proto_rawDescOnce sync.Once
	file_swaprpc_swaprpc_proto_rawDescData = file_swaprpc_swaprpc_proto_rawDesc
)

func file_swaprpc_swaprpc_proto_rawDescGZIP() []byte {
	file_swaprpc_swaprpc_proto_rawDescOnce.Do(func() {
		file_swaprpc_swaprpc_proto_rawDescData = protoimpl.X.CompressGZIP(file_swaprpc_swaprpc_proto_rawDescData)
	})
	return file_swaprpc_swaprpc_proto_rawDescData
}

var file_swaprpc_swaprpc_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_swaprpc_swaprpc_proto_goTypes = []interface{}{
	(*GetRatesRequest)(nil),        // 0: swapwallet.GetRatesRequest
	(*GetRatesResponse)(nil),       // 1: swapwallet.GetRatesResponse
	(*AssetInfo)(nil),              // 2: swapwallet.AssetInfo
	(*ServerTerms)(nil),            // 3: swapwallet.ServerTerms
	(*ReceivePaymentRequest)(nil),  // 4: swapwallet.ReceivePaymentRequest
	(*ReceivePaymentResponse)(nil), // 5: swapwallet.ReceivePaymentResponse
	(*StartReceiveMessage)(nil),    // 6: swapwallet.StartReceiveMessage
	(*TxOpenedMessage)(nil),        // 7: swapwallet.TxOpenedMessage
	(*CancelMessage)(nil),          // 8: swapwallet.CancelMessage
	(*WaitForPaymentMessage)(nil),  // 9: swapwallet.WaitForPaymentMessage
	(*PreimageMessage)(nil),        // 10: swapwallet.PreimageMessage
	(*SendPaymentRequest)(nil),     // 11: swapwallet.SendPaymentRequest
	(*SendPaymentResponse)(nil),    // 12: swapwallet.SendPaymentResponse
	(*PaymentRequestmessage)(nil),  // 13: swapwallet.PaymentRequestmessage
	(*TxMessage)(nil),              // 14: swapwallet.TxMessage
	(*PayAgreementMessage)(nil),    // 15: swapwallet.PayAgreementMessage
	(*PayCompletedMessage)(nil),    // 16: swapwallet.PayCompletedMessage
}
var file_swaprpc_swaprpc_proto_depIdxs = []int32{
	2,  // 0: swapwallet.GetRatesResponse.asset_infos:type_name -> swapwallet.AssetInfo
	6,  // 1: swapwallet.ReceivePaymentRequest.start_receive:type_name -> swapwallet.StartReceiveMessage
	10, // 2: swapwallet.ReceivePaymentRequest.preimage_message:type_name -> swapwallet.PreimageMessage
	8,  // 3: swapwallet.ReceivePaymentRequest.cancel:type_name -> swapwallet.CancelMessage
	9,  // 4: swapwallet.ReceivePaymentResponse.wait_for_payment:type_name -> swapwallet.WaitForPaymentMessage
	7,  // 5: swapwallet.ReceivePaymentResponse.tx_opened:type_name -> swapwallet.TxOpenedMessage
	13, // 6: swapwallet.SendPaymentRequest.payment_request:type_name -> swapwallet.PaymentRequestmessage
	14, // 7: swapwallet.SendPaymentRequest.tx:type_name -> swapwallet.TxMessage
	8,  // 8: swapwallet.SendPaymentRequest.cancel:type_name -> swapwallet.CancelMessage
	15, // 9: swapwallet.SendPaymentResponse.pay_agreement:type_name -> swapwallet.PayAgreementMessage
	16, // 10: swapwallet.SendPaymentResponse.pay_completed:type_name -> swapwallet.PayCompletedMessage
	0,  // 11: swapwallet.SwapService.GetRates:input_type -> swapwallet.GetRatesRequest
	11, // 12: swapwallet.SwapService.SendPayment:input_type -> swapwallet.SendPaymentRequest
	4,  // 13: swapwallet.SwapService.ReceivePayment:input_type -> swapwallet.ReceivePaymentRequest
	1,  // 14: swapwallet.SwapService.GetRates:output_type -> swapwallet.GetRatesResponse
	12, // 15: swapwallet.SwapService.SendPayment:output_type -> swapwallet.SendPaymentResponse
	5,  // 16: swapwallet.SwapService.ReceivePayment:output_type -> swapwallet.ReceivePaymentResponse
	14, // [14:17] is the sub-list for method output_type
	11, // [11:14] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_swaprpc_swaprpc_proto_init() }
func file_swaprpc_swaprpc_proto_init() {
	if File_swaprpc_swaprpc_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_swaprpc_swaprpc_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRatesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_swaprpc_swaprpc_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRatesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_swaprpc_swaprpc_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssetInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_swaprpc_swaprpc_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerTerms); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_swaprpc_swaprpc_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReceivePaymentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_swaprpc_swaprpc_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReceivePaymentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_swaprpc_swaprpc_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartReceiveMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_swaprpc_swaprpc_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TxOpenedMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_swaprpc_swaprpc_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_swaprpc_swaprpc_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WaitForPaymentMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_swaprpc_swaprpc_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PreimageMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_swaprpc_swaprpc_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendPaymentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_swaprpc_swaprpc_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendPaymentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_swaprpc_swaprpc_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentRequestmessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_swaprpc_swaprpc_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TxMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_swaprpc_swaprpc_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayAgreementMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_swaprpc_swaprpc_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayCompletedMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_swaprpc_swaprpc_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*ReceivePaymentRequest_StartReceive)(nil),
		(*ReceivePaymentRequest_PreimageMessage)(nil),
		(*ReceivePaymentRequest_Cancel)(nil),
	}
	file_swaprpc_swaprpc_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*ReceivePaymentResponse_WaitForPayment)(nil),
		(*ReceivePaymentResponse_TxOpened)(nil),
	}
	file_swaprpc_swaprpc_proto_msgTypes[11].OneofWrappers = []interface{}{
		(*SendPaymentRequest_PaymentRequest)(nil),
		(*SendPaymentRequest_Tx)(nil),
		(*SendPaymentRequest_Cancel)(nil),
	}
	file_swaprpc_swaprpc_proto_msgTypes[12].OneofWrappers = []interface{}{
		(*SendPaymentResponse_PayAgreement)(nil),
		(*SendPaymentResponse_PayCompleted)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_swaprpc_swaprpc_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_swaprpc_swaprpc_proto_goTypes,
		DependencyIndexes: file_swaprpc_swaprpc_proto_depIdxs,
		MessageInfos:      file_swaprpc_swaprpc_proto_msgTypes,
	}.Build()
	File_swaprpc_swaprpc_proto = out.File
	file_swaprpc_swaprpc_proto_rawDesc = nil
	file_swaprpc_swaprpc_proto_goTypes = nil
	file_swaprpc_swaprpc_proto_depIdxs = nil
}
